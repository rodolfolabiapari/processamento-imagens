#Escalamentofunction out = translacao(img, dx, dy)  out = [];  [lin, col] = size(img);    [x, y] = meshgrid(1:col, 1:lin); # Faz uma combinação dos valores de lin e col    matTranslacao = [1 0 dx;                  0 1 dy;                  0 0 1 ]; #matriz de escala     #  Gera um vetor de novas coordenadas onde:  #     |x1 x2 x3 x4 são posições no eixo x       xlin*col|  #     |y1 y2 y3 y4 são posições no eixo y       ylin*col|  #     |1  1  1  1  é para facilitar os cálculos 1lin*col|    ncoord = matTranslacao * [x(:)'; y(:)'; ones(1, lin * col)];    # Transforma cada vetor em uma matriz de tamanho lin col  nX = reshape(ncoord(1,:), lin, col);  nY = reshape(ncoord(2,:), lin, col);    # Interpola os dados das 3 matrizes (x, y, img), no eixo nX e nY  out = interp2(x, y, double(img), nX, nY);    # Transforma-a para inteiros  out = uint8(out);    #  [lin, col] = size(img);  #  Ncoord = []; #cria as matrizes#  nimg = [zeros(lin, col)]; #cria as matrizes    #  # Para cada pixel#  for i = 1:lin#    for j = 1:col    #      Ncoord = matTranslacao * [i; j; 1]; # calcula sua nova coordenada      #      ni = floor(Ncoord(1)); # Arredonda este ponto#      nj = floor(Ncoord(2));      #      if ((ni > 0) && (ni <= lin)) && ((nj > 0) && (nj <= col))#        nimg(ni, nj) = img(i, j); # Adiciona na nova imagem caso for um ponto         # possível#      end      #    end#  end#  out = uint8(nimg);end